{"version":3,"file":"../CharacterAI.js","sourceRoot":"../../src","sources":["CharacterAI.coffee"],"names":[],"mappings":"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","sourcesContent":["TileContainer = require('parallelio-tiles').TileContainer\nVisionCalculator = require('./VisionCalculator')\nDoor = require('./Door')\nWalkAction = require('./actions/WalkAction')\nAttackMoveAction = require('./actions/AttackMoveAction')\nPropertyWatcher = require('spark-starter').PropertyWatcher\n\nmodule.exports = class CharacterAI\n  constructor: (@character)->\n    @nextActionCallback = => @nextAction()\n    @visionMemory = new TileContainer()\n    @tileWatcher = new PropertyWatcher\n      callback: =>\n        @updateVisionMemory()\n      property: @character.getPropertyInstance('tile')\n      \n\n  start: ->\n    @tileWatcher.bind()\n    @nextAction()\n\n  nextAction: ->\n    @updateVisionMemory()\n    if ennemy = @getClosestEnemy()\n      @attackMoveTo(ennemy).on('end', nextActionCallback)\n    else if unexplored = @getClosestUnexplored()\n      @walkTo(unexplored).on('end', nextActionCallback)\n    else\n      @resetVisionMemory()\n      @walkTo(@getClosestUnexplored()).on('end', nextActionCallback)\n\n  updateVisionMemory: ->\n    calculator = new VisionCalculator(@character.tile)\n    calculator.calcul()\n    @visionMemory = calculator.toContainer().merge @visionMemory, (a, b)=>\n      if a?\n        a = @analyzeTile(a)\n      if a? and b?\n        a.visibility = Math.max(a.visibility, b.visibility)\n        a\n      else\n        a || b\n\n  analyzeTile: (tile)->\n    tile.ennemySpotted = tile.getFinalTile().children?.find (c)=> @isEnnemy(c)\n    tile.explorable = @isExplorable(tile)\n    tile\n\n  isEnnemy: (elem)->\n    @character.owner?.isEnemy?(elem)\n\n  getClosestEnemy: ->\n    @visionMemory.closest @character.tile, (t)=> t.ennemySpotted\n\n  getClosestUnexplored: ->\n    @visionMemory.closest @character.tile, (t)=> t.visibility < 1 and t.explorable\n\n  isExplorable: (tile)->\n    tile = tile.getFinalTile()\n    tile.walkable or tile.children?.find (c)=>\n      c instanceof Door\n\n  attackMoveTo: (tile)->\n    tile = tile.getFinalTile()\n    action = new AttackMoveAction(actor: @character, target: tile)\n    if action.isReady()\n      action.execute()\n      action\n\n  walkTo: (tile)->\n    tile = tile.getFinalTile()\n    action = new WalkAction(actor: @character, target: tile)\n    if action.isReady()\n      action.execute()\n      action\n  \n  \n\n\n\n"]}
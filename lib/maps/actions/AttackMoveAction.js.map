{"version":3,"file":"../../actions/AttackMoveAction.js","sourceRoot":"../../../src","sources":["actions/AttackMoveAction.coffee"],"names":[],"mappings":"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","sourcesContent":["WalkAction = require('./WalkAction')\nAttackAction = require('./AttackAction')\nTargetAction = require('./TargetAction')\nPathFinder = require('parallelio-pathfinder')\nLineOfSight = require('../LineOfSight')\nPropertyWatcher = require('spark-starter').PropertyWatcher\nEventBind = require('spark-starter').EventBind\n\nmodule.exports = class AttackMoveAction extends TargetAction\n  @properties\n    walkAction:\n      calcul: ->\n        walkAction = new WalkAction(actor: @actor, target: @target, parent: @parent)\n        walkAction\n    enemySpotted:\n      calcul: ->\n        @path = new PathFinder(@actor.tile.container, @actor.tile, false, {\n          validTile: (tile)=>\n            tile.transparent and (new LineOfSight(@actor.tile.container, @actor.tile.x, @actor.tile.y, tile.x, tile.y)).getSuccess()\n          arrived: (step)=>\n            step.enemy = step.tile.children.find (c) => @isEnemy(c)\n          efficiency: (tile)=>\n        })\n        @path.calcul()\n        @path.solution?.enemy\n    tileWatcher:\n      calcul: ->\n        new PropertyWatcher({\n          callback: =>\n            @testEnemySpotted()\n          property: @actor.getPropertyInstance('tile')\n        })\n      destroy: true\n    interruptBinder:\n      calcul: ->\n        new EventBind 'interrupted', null, =>\n          @interrupt()\n      destroy: true\n\n  isEnemy: (elem)->\n    @actor.owner?.isEnemy?(elem)\n\n  validTarget: ()->\n    @walkAction.validTarget()\n\n  testEnemySpotted: ()->\n    @invalidateEnemySpotted()\n    if @enemySpotted\n      @attackAction = new AttackAction(actor: @actor, target: @enemySpotted)\n      @attackAction.on 'finished', =>\n        if @isReady()\n          @start()\n      @interruptBinder.bindTo(@attackAction)\n      @walkAction.interrupt()\n      @invalidateWalkAction()\n      @attackAction.execute()\n\n  execute: ->\n    unless @testEnemySpotted()\n      @walkAction.on 'finished', =>\n        @finished()\n      @interruptBinder.bindTo(@walkAction)\n      @tileWatcher.bind()\n      @walkAction.execute()"]}
{"version":3,"file":"../StarSystem.js","sourceRoot":"../../src","sources":["StarSystem.coffee"],"names":[],"mappings":"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","sourcesContent":["Element = require('spark-starter').Element\n\nmodule.exports = class StarSystem extends Element\n  constructor: (data) ->\n    super(data)\n    @init()\n  @properties\n    x:{}\n    y:{}\n    name:{}\n    links:\n      collection:\n        findStar: (star)->\n          @find((link)-> link.star2 == star || link.star1 == star)\n  init: ->\n  linkTo: (star)->\n    unless @links.findStar(star)\n      @addLink(new @constructor.Link(this,star))\n  addLink: (link)->\n    @links.add(link)\n    link.otherStar(this).links.add(link)\n    link\n  dist: (x,y)->\n    xDist = @x - x\n    yDist = @y - y\n    Math.sqrt((xDist*xDist)+(yDist*yDist))\n  @collenctionFn:\n    closest: (x,y)->\n      min = null\n      minDist = null\n      @forEach (star)->\n        dist = star.dist(x,y)\n        if !min? or minDist > dist\n          min = star\n          minDist = dist\n      min\n    closests: (x,y)->\n      dists = @map (star)-> {dist:star.dist(x,y), star:star}\n      dists.sort (a, b)->\n        a.dist - b.dist\n      @copy(dists.map (dist)-> dist.star)\n\n  isSelectableBy: (player)->\n    true\n\nclass StarSystem.Link extends Element\n  constructor: (@star1, @star2) ->\n    super()\n  remove: ->\n    @star1.links.remove(this)\n    @star2.links.remove(this)\n  otherStar: (star)->\n    if star == @star1\n      @star2\n    else\n      @star1\n  getLength: ->\n    @star1.dist(@star2.x, @star2.y)\n  inBoundaryBox: (x, y, padding=0) ->\n    x1 = Math.min(@star1.x, @star2.x) - padding\n    y1 = Math.min(@star1.y, @star2.y) - padding\n    x2 = Math.max(@star1.x, @star2.x) + padding\n    y2 = Math.max(@star1.y, @star2.y) + padding\n    x >= x1 and x <= x2 and y >= y1 and y <= y2\n  closeToPoint: (x, y, minDist)->\n    unless @inBoundaryBox(x,y,minDist)\n      return false\n    a = @star1\n    b = @star2\n    c = {\"x\":x, \"y\":y}\n    \n    xAbDist = b.x - a.x\n    yAbDist = b.y - a.y\n    abDist = Math.sqrt((xAbDist*xAbDist)+(yAbDist*yAbDist))\n    abxAngle = Math.atan(yAbDist/xAbDist)\n    \n    xAcDist = c.x - a.x\n    yAcDist = c.y - a.y\n    acDist = Math.sqrt((xAcDist*xAcDist)+(yAcDist*yAcDist))\n    acxAngle = Math.atan(yAcDist/xAcDist)\n    \n    abcAngle = abxAngle - acxAngle\n    cdDist = Math.abs(Math.sin(abcAngle)*acDist)\n    cdDist <= minDist\n  intersectLink: (link)->\n    x1 = @star1.x\n    y1 = @star1.y\n    x2 = @star2.x\n    y2 = @star2.y\n    x3 = link.star1.x\n    y3 = link.star1.y\n    x4 = link.star2.x\n    y4 = link.star2.y\n    \n    s1_x = x2 - x1\n    s1_y = y2 - y1\n    s2_x = x4 - x3\n    s2_y = y4 - y3\n\n    s = (-s1_y * (x1 - x3) + s1_x * (y1 - y3)) / (-s2_x * s1_y + s1_x * s2_y)\n    t = ( s2_x * (y1 - y3) - s2_y * (x1 - x3)) / (-s2_x * s1_y + s1_x * s2_y)\n    \n    s > 0 and s < 1 and t > 0 and t < 1\n"]}
{"version":3,"file":"../Character.js","sourceRoot":"../../src","sources":["Character.coffee"],"names":[],"mappings":"AAAA,IAAA,SAAA,EAAA,UAAA,EAAA,KAAA,EAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,kBAAR,CAA2B,CAAC;;AACpC,UAAA,GAAa,OAAA,CAAQ,cAAR;;AACb,UAAA,GAAa,OAAA,CAAQ,sBAAR;;AAEb,MAAM,CAAC,OAAP,GAAuB;EAAN,MAAA,UAAA,QAAwB,MAAxB;IAEf,WAAa,KAAA,CAAA;;MAAC,IAAC,CAAA;IAAF;;IA6Bb,WAAa,CAAA,CAAA;MACX,IAAG,CAAC,IAAC,CAAA,IAAF,IAAU,qCAAb;eACE,IAAC,CAAA,eAAD,CAAiB,IAAC,CAAA,IAAI,CAAC,iBAAiB,CAAC,KAAzC,EADF;;IADW;;IAIb,WAAa,CAAC,IAAD,CAAA;6BACX,IAAI,CAAE,kBAAN,KAAkB;IADP;;IAGb,MAAQ,CAAC,IAAD,CAAA;AACN,UAAA;MAAA,MAAA,GAAS,IAAI,UAAJ,CACP;QAAA,KAAA,EAAO,IAAP;QACA,MAAA,EAAQ;MADR,CADO;MAIT,MAAM,CAAC,OAAP,CAAA;aACA;IANM;;IAQR,cAAgB,CAAC,MAAD,CAAA;aACd;IADc;;EA9CD;;EACf,SAAC,CAAA,MAAD,CAAQ,UAAR;;EAIA,SAAC,CAAA,UAAD,CACE;IAAA,IAAA,EACE;MAAA,MAAA,EAAQ,QAAA,CAAC,GAAD,CAAA;QACN,IAAG,IAAC,CAAA,IAAJ;iBACE,IAAC,CAAA,WAAD,CAAA,EADF;;MADM;IAAR,CADF;IAKA,OAAA,EACE;MAAA,OAAA,EAAS;IAAT,CANF;IAQA,OAAA,EACE;MAAA,OAAA,EAAS;IAAT,CATF;IAWA,aAAA,EACE;MAAA,MAAA,EAAQ,QAAA,CAAA,CAAA;eACN,IAAI,UAAJ,CACE;UAAA,KAAA,EAAO;QAAP,CADF;MADM;IAAR,CAZF;IAgBA,gBAAA,EACE;MAAA,UAAA,EAAY,IAAZ;MACA,MAAA,EAAQ,QAAA,CAAC,WAAD,CAAA;AACN,YAAA;QAAA,IAAA,GAAO,WAAW,CAAC,IAAZ,CAAiB,MAAjB;QACP,IAAG,IAAH;iBACE,WAAW,CAAC,IAAZ,CAAiB,iBAAjB,EAAmC,IAAnC,EADF;SAAA,MAAA;iBAGE,GAHF;;MAFM;IADR;EAjBF,CADF","sourcesContent":["Tiled = require('parallelio-tiles').Tiled\nDamageable = require('./Damageable')\nWalkAction = require('./actions/WalkAction')\n\nmodule.exports = class Character extends Tiled\n  @extend Damageable\n  constructor: (@name) ->\n    super()\n\n  @properties\n    game:\n      change: (old)->\n        if @game \n          @setDefaults()\n\n    offsetX:\n      default: 0.5\n\n    offsetY:\n      default: 0.5\n\n    defaultAction:\n      calcul: ->\n        new WalkAction\n          actor: this\n\n    availableActions:\n      collection: true\n      calcul: (invalidator)->\n        tile = invalidator.prop(\"tile\")\n        if tile\n          invalidator.prop(\"providedActions\",tile)\n        else\n          []\n\n  setDefaults: ->\n    if !@tile && @game.mainTileContainer?\n      @putOnRandomTile(@game.mainTileContainer.tiles)\n\n  canGoOnTile: (tile)->\n    tile?.walkable != false\n\n  walkTo: (tile) ->\n    action = new WalkAction\n      actor: this\n      target: tile\n\n    action.execute()\n    action\n\n  isSelectableBy: (player)->\n    true"]}